openapi: 3.0.0
info:
  title: Social Network API
  description: API for storing and managing social network entities
  version: "1.0.0"

servers:
  - url: "http://localhost:8000"

tags:
  - name: users
  - name: walls
  - name: messages

paths:
  /users/:
    get:
      tags:
        - users
      summary: Get all users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserOut"

    post:
      tags:
        - users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIn"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOut"

  /users/{user_id}:
    get:
      tags:
        - users
      summary: Get user by ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOut"

  /walls/:
    post:
      tags:
        - walls
      summary: Create a new wall post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WallCreate"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WallOut"

  /walls/{wall_id}:
    get:
      tags:
        - walls
      summary: Get wall post by ID
      parameters:
        - name: wall_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WallOut"

  /messages/:
    post:
      tags:
        - messages
      summary: Send a message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageCreate"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageOut"

  /messages/{message_id}:
    get:
      tags:
        - messages
      summary: Get message by ID
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageOut"

components:
  schemas:
    UserIn:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          maxLength: 256
        password:
          type: string
          maxLength: 256

    UserOut:
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
          maxLength: 256
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        birth_date:
          type: string
          format: date
        email:
          type: string
          maxLength: 256
        title:
          type: string
          maxLength: 256
        photo:
          type: string
          maxLength: 256

    WallCreate:
      type: object
      required:
        - content
        - user_id
      properties:
        content:
          type: string
          maxLength: 256
        user_id:
          type: integer
          format: int64

    WallOut:
      type: object
      properties:
        wall_id:
          type: integer
          format: int64
        content:
          type: string
          maxLength: 256
        user:
          $ref: "#/components/schemas/UserOut"

    MessageCreate:
      type: object
      required:
        - content
        - author_id
        - recipient_id
      properties:
        content:
          type: string
          maxLength: 256
        author_id:
          type: integer
          format: int64
        recipient_id:
          type: integer
          format: int64

    MessageOut:
      type: object
      properties:
        message_id:
          type: integer
          format: int64
        content:
          type: string
          maxLength: 256
        author:
          $ref: "#/components/schemas/UserOut"
        recipient:
          $ref: "#/components/schemas/UserOut"